获取所有文章
词频统计
统计热门分词（词频大于某个数）
去除废词
	匹配标签库，有相近的意思就增加到默认的标签当中
统计热门词汇所匹配的文章

补充
	自定义的加入分类的会将flag标志位1
	新的热词添加之后就在手动添加热词的近义词
	有新的文章加入进来之后需要分词并更新权重
	分词不一次性分完，一次分词N个新闻
	热词信息存入session
顺序
	匹配默认标签
	根据热度自定义标签

最终效果
	显示最后一次添加的文章ID
	点击词频统计可以看到
		词频结果
		提示默认标签库已经加入
		新的分类和菜单已经生成，文章也可以形成
疑问
	标签库的权重是出现的次数吗
	那么添加到分类的是权重的什么？
数据结构
	(热门)词频统计结果
		[
			[词名]=>频率
		]
	已有标签统计结果
		[
			[默认标签名]=>文章数
		]

	

---------------------完整流程分析---------------------------
前提
	1篇文章可以提取多个关键词
	一个关键词对应有多篇文章
功能实现
	从多篇文章中统计关键词出现的频率以及所在的文章从而根据那个关键词形成一个分类、菜单，分类和菜单归结于“热词”之下
标签库
	字段
		id 主键 唯一标识一个名词
		name 标签的名字
		weight 权重 出现的次数
		pid 父级标签的名字
		term_id 分类名称
	结构
			研究        就业
			/  \		/  \
		  钻研 探讨... 招聘 校招... 
	说明
		1.初始化的时候会有3个默认的标签，分别是就业、科研(研究)、讲座，他们的ID分别是2，1,3
		2.除了初始化的字段以及近义词的添加，库里标签的增加都是通过统计生成的
相关数据结构
	1.文章-关键词
	arti_id keywords
	1       科研 研究 活动
相关功能
	统计词频 wordCount
		1.关键词根据格式转化成数组 
			['科研', '讲座', '就业', '就业', '大学']
		2.词频统计函数 count_result
			[
				关键词名称 频率
				'科研' => 1,
				'讲座' => 1,
				'就业' => 2,
				'大学' => 1
			]
	找出热门分词 combineToClass
		根据出现的频率统计热门分词 hot_word
			[
				'科研' => 1,
				'讲座' => 1,
				'就业' => 2,
				'大学' => 1
			]	
	去除废词 trimBreakword
		去除废词(原先是默认的自定义废词, 比如'大学') hot_word
			[
				'科研' => 1,
				'讲座' => 1,
				'就业' => 2				
			]
	标签库比较 tabCompare
		[
			0 => [
			    [hot_word] => 研究
	            [tab_id] => 4 // 顶级的ID
	            [id] => 532
	            [post_keywords] => 峰会, 教授, 马费, 生态, 研究
	            [coll_id] => 1
			]

		]
	组织数据结构countHotPost
		遍历源数据
			[
				0 => [
					'id' => 120,
					'keywords' => '科研 研究 大学'
				]
				1 => [
					'id' => 124,
					'keywords' => '讲座 信管'
				]
				2 => [
					'id' => 123,
					'keywords' => '数据库 数据结构'
				]
			]
		源数据与热门分词统计结果匹配
			[
				'科研' => [
					'id' => 120, // 文章ID
					'hot_word' => '科研', // 热词
					'tab_id' => 1 // 词频
					'post_keywords' => '科研 研究 大学'
					0 => [
					    ],
					1 => []
				],			
			]






